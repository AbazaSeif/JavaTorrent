<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.johnnei</groupId>
  <artifactId>javatorrent</artifactId>
  <version>0.6.0</version>
  <packaging>pom</packaging>
  <name>JavaTorrent</name>
  <description>BitTorrent Protocol implementation as java library</description>
  <url>https://github.com/Johnnei/JavaTorrent</url>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Johan "Johnnei"</name>
      <email>johnnei07@live.nl</email>
      <organization>Johnnei</organization>
      <organizationUrl>https://johnnei.org</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:Johnnei/JavaTorrent.git</connection>
    <developerConnection>scm:git:git@github.com:Johnnei/JavaTorrent.git</developerConnection>
    <url>https://github.com/Johnnei/JavaTorrent</url>
    <tag>HEAD</tag>
  </scm>

  <ciManagement>
    <system>GitLab CI</system>
    <url>https://git.johnnei.org/Johnnei/JavaTorrent/pipelines</url>
  </ciManagement>

  <issueManagement>
    <system>JIRA</system>
    <url>https://jira.johnnei.org/projects/JBT/issues/</url>
  </issueManagement>

  <modules>
    <module>bittorrent</module>
    <module>bittorrent-extension</module>
    <module>bittorrent-extension-ut-metadata</module>
    <module>bittorrent-tracker-udp</module>
    <module>bittorrent-utp</module>
    <module>bittorrent-integration-tests</module>
  </modules>

  <properties>
    <!-- Configure compiler -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <skipTests>false</skipTests>
    <skipUTs>${skipTests}</skipUTs>
    <skipITs>${skipTests}</skipITs>

    <!-- Define plugin versions -->
    <plugin.org.apache.maven.plugins.maven-failsafe-plugin>2.19.1</plugin.org.apache.maven.plugins.maven-failsafe-plugin>
    <plugin.org.apache.maven.plugins.maven-jar-plugin>2.6</plugin.org.apache.maven.plugins.maven-jar-plugin>
    <plugin.org.codehaus.mojo.build-helper-maven-plugin>1.10</plugin.org.codehaus.mojo.build-helper-maven-plugin>
    <plugin.surefire.version>2.19.1</plugin.surefire.version>

    <!-- Define dependency versions -->
    <dependency.com.jayway.awaitility.awaitility>1.7.0</dependency.com.jayway.awaitility.awaitility>
    <dependency.com.github.tomakehurst.wiremock>2.1.10</dependency.com.github.tomakehurst.wiremock>
    <dependency.com.squareup.okhttp3.okhttp>3.4.1</dependency.com.squareup.okhttp3.okhttp>
    <dependency.commons-codec>1.10</dependency.commons-codec>
    <dependency.junit.junit>4.12</dependency.junit.junit>
    <dependency.org.apache.logging.log4j.log4j.version>2.6.2</dependency.org.apache.logging.log4j.log4j.version>
    <dependency.org.easymock.easymock>3.4</dependency.org.easymock.easymock>
    <dependency.org.hamcrest.hamcrest-all>1.3</dependency.org.hamcrest.hamcrest-all>
    <dependency.org.powermock.powermock-reflect.version>1.6.5</dependency.org.powermock.powermock-reflect.version>
    <dependency.org.slf4j.slf4j-api>1.7.21</dependency.org.slf4j.slf4j-api>
  </properties>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${plugin.surefire.version}</version>
        <configuration>
          <skipTests>${skipUTs}</skipTests>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!-- Plugin to allow templated code generation -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${plugin.org.codehaus.mojo.build-helper-maven-plugin}</version>
          <executions>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-sources/java/</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.4.0.905</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.9</version>
          <executions>
            <!-- Record unit test coverage -->
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/jacoco.exec</destFile>
              </configuration>
            </execution>
            <!-- Record integration test coverage -->
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/jacoco-it.exec</destFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.8</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.0.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.10.4</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <tags>
                <!-- Introduced in Java 8, but not officially promoted for outside JDK use. But I like them! -->
                <tag>
                  <name>implNote</name>
                  <placement>a</placement>
                  <head>Implementation Note:</head>
                </tag>
              </tags>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <!-- Avoid graphical pinentry -->
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.johnnei</groupId>
        <artifactId>javatorrent-bittorrent</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.johnnei</groupId>
        <artifactId>javatorrent-bittorrent</artifactId>
        <type>test-jar</type>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.johnnei</groupId>
        <artifactId>javatorrent-bittorrent-extension</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.johnnei</groupId>
        <artifactId>javatorrent-bittorrent-extension-ut-metadata</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.johnnei</groupId>
        <artifactId>javatorrent-bittorrent-utp</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${dependency.commons-codec}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${dependency.org.slf4j.slf4j-api}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${dependency.org.apache.logging.log4j.log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${dependency.org.apache.logging.log4j.log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${dependency.org.apache.logging.log4j.log4j.version}</version>
      </dependency>

      <!-- Test Dependencies -->
      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock</artifactId>
        <version>${dependency.com.github.tomakehurst.wiremock}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${dependency.junit.junit}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${dependency.org.hamcrest.hamcrest-all}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${dependency.org.easymock.easymock}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-reflect</artifactId>
        <version>${dependency.org.powermock.powermock-reflect.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp</artifactId>
        <version>${dependency.com.squareup.okhttp3.okhttp}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.12.0</version>
        <scope>test</scope>
        <exclusions>
          <!-- JUnit imports hamcrest, mockito overrides it to runtime causing it to be missing -->
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.jayway.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${dependency.com.jayway.awaitility.awaitility}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
